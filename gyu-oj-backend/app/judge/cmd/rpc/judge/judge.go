// Code generated by goctl. DO NOT EDIT.
// Source: judge.proto

package judge

import (
	"context"

	"gyu-oj-backend/app/judge/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	JudgeReq  = pb.JudgeReq
	JudgeResp = pb.JudgeResp

	Judge interface {
		DoJudge(ctx context.Context, in *JudgeReq, opts ...grpc.CallOption) (*JudgeResp, error)
	}

	defaultJudge struct {
		cli zrpc.Client
	}
)

func NewJudge(cli zrpc.Client) Judge {
	return &defaultJudge{
		cli: cli,
	}
}

func (m *defaultJudge) DoJudge(ctx context.Context, in *JudgeReq, opts ...grpc.CallOption) (*JudgeResp, error) {
	client := pb.NewJudgeClient(m.cli.Conn())
	return client.DoJudge(ctx, in, opts...)
}
