// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	question "gyu-oj-backend/app/question/cmd/api/internal/handler/question"
	questionSubmit "gyu-oj-backend/app/question/cmd/api/internal/handler/questionSubmit"
	"gyu-oj-backend/app/question/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/question/add",
				Handler: question.CreateQuestionHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/question/delete",
				Handler: question.DeleteQuestionHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/question/update",
				Handler: question.UpdateQuestionHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/gyu_oj/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/question/query",
				Handler: question.QueryQuestionHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/question/list",
				Handler: question.QueryQuestionListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/gyu_oj/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/questionSubmit/create",
				Handler: questionSubmit.CreateQuestionSubmitHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/questionSubmit/list",
				Handler: questionSubmit.QueryQuestionSubmitListHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/gyu_oj/v1"),
	)
}
