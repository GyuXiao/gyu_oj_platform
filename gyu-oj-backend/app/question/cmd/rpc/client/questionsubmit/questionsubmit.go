// Code generated by goctl. DO NOT EDIT.
// Source: question.proto

package questionsubmit

import (
	"context"

	"gyu-oj-backend/app/question/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	JudgeCase                    = pb.JudgeCase
	JudgeConfig                  = pb.JudgeConfig
	JudgeInfo                    = pb.JudgeInfo
	PageReq                      = pb.PageReq
	QuestionAddReq               = pb.QuestionAddReq
	QuestionAddResp              = pb.QuestionAddResp
	QuestionDeleteReq            = pb.QuestionDeleteReq
	QuestionDeleteResp           = pb.QuestionDeleteResp
	QuestionGetByIdReq           = pb.QuestionGetByIdReq
	QuestionGetByIdResp          = pb.QuestionGetByIdResp
	QuestionListByPageReq        = pb.QuestionListByPageReq
	QuestionListByPageResp       = pb.QuestionListByPageResp
	QuestionSubmitAddReq         = pb.QuestionSubmitAddReq
	QuestionSubmitAddResp        = pb.QuestionSubmitAddResp
	QuestionSubmitListByPageReq  = pb.QuestionSubmitListByPageReq
	QuestionSubmitListByPageResp = pb.QuestionSubmitListByPageResp
	QuestionSubmitVO             = pb.QuestionSubmitVO
	QuestionUpdateReq            = pb.QuestionUpdateReq
	QuestionUpdateResp           = pb.QuestionUpdateResp
	QuestionVO                   = pb.QuestionVO

	QuestionSubmit interface {
		DoQuestionSubmit(ctx context.Context, in *QuestionSubmitAddReq, opts ...grpc.CallOption) (*QuestionSubmitAddResp, error)
		QueryQuestionSubmit(ctx context.Context, in *QuestionSubmitListByPageReq, opts ...grpc.CallOption) (*QuestionSubmitListByPageResp, error)
	}

	defaultQuestionSubmit struct {
		cli zrpc.Client
	}
)

func NewQuestionSubmit(cli zrpc.Client) QuestionSubmit {
	return &defaultQuestionSubmit{
		cli: cli,
	}
}

func (m *defaultQuestionSubmit) DoQuestionSubmit(ctx context.Context, in *QuestionSubmitAddReq, opts ...grpc.CallOption) (*QuestionSubmitAddResp, error) {
	client := pb.NewQuestionSubmitClient(m.cli.Conn())
	return client.DoQuestionSubmit(ctx, in, opts...)
}

func (m *defaultQuestionSubmit) QueryQuestionSubmit(ctx context.Context, in *QuestionSubmitListByPageReq, opts ...grpc.CallOption) (*QuestionSubmitListByPageResp, error) {
	client := pb.NewQuestionSubmitClient(m.cli.Conn())
	return client.QueryQuestionSubmit(ctx, in, opts...)
}
